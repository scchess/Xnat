##Copyright 2005 Harvard University / Howard Hughes Medical Institute (HHMI) All Rights Reserved
$page.setTitle("XDAT")
$page.setLinkColor($ui.alink)
$page.setVlinkColor($ui.vlink)
#set ($pageName = "SearchResults.vm")
#set ($template = $data.getTemplateInfo())
$!template.setLayoutTemplate("DefaultExptList.vm")
#set ($currentPage = $currentPage + 1)
#if ($data.message)
<div class="error">$data.message</div><br>
#end
#parse("/screens/admin_bar.vm")

#set ( $url = $link.setPage("XDATScreen_add_xdat_element_security.vm").addPathInfo("popup","true")  )

<div id="data-type-list" class="admin-content">

    <div class="header">
        <b>Data Types</b>
        <button id="setup-data-type" type="button"
            ##data-url="$url"
            ##onclick="return popupCentered('$url','Edit',960,720,3);"
            onclick="XNAT.app.adminPopupDialog('$url')"
            class="btn1 btn-sm pull-right">Setup Additional Data Type</button>
        <div class="clearfix clear"></div>
    </div>

    <form name="form1" method="post" action="$link.setAction("ManageDataTypes")" class="noHide">

        <div id="datatype-table-container" style="margin-bottom: 1em;"></div>
        ## all table rows are inserted via datatypes.js

        <p><input type="submit" class="btn1" style="float:right;" value="Save Changes"></p>

        <div class="clear"></div>

    </form>
</div>

<style>
    .xnat-table.narrow > thead > tr > th,
    .xnat-table.narrow > tbody > tr > th,
    .xnat-table.narrow > tbody > tr > td,
    .xnat-table.narrow > tfoot > tr > th,
    .xnat-table.narrow > tfoot > tr > td {
        padding: 4px 0px;
    }
    .xnat-table.narrow > thead > tr > th:first-child,
    .xnat-table.narrow > tbody > tr > th:first-child,
    .xnat-table.narrow > tbody > tr > td:first-child,
    .xnat-table.narrow > tfoot > tr > th:first-child,
    .xnat-table.narrow > tfoot > tr > td:first-child {
        padding-left: 4px;
    }
</style>

<!-- render data table & edit dialogs -->
<script src="$content.getURI("scripts/xnat/admin/datatypes.js")"></script>
<script>
    console.log('datatype-builder.js');

    var XNAT = getObject(XNAT || {});

    (function(factory){
        if (typeof define === 'function' && define.amd) {
            define(factory);
        }
        else if (typeof exports === 'object') {
            module.exports = factory();
        }
        else {
            return factory();
        }
    }(function() {

        var datatypes, undefined, projectTerm = '$displayManager.getPluralDisplayNameForProject().toLowerCase()';

        XNAT.admin =
                getObject(XNAT.admin || {});
        XNAT.admin.datatypes =
                getObject(XNAT.admin.datatypes || {});

        function binaryBoolean(bool){
            return (bool === 'true') ? '1' : '0';
        }

        // build datatype object
        #foreach($data_type in $data_types)
            XNAT.admin.datatypes['$!data_type.getProperty("element_name")'] = {
                'xdat:element_security.element_name': '$!data_type.getProperty("element_name")',
                'xdat:element_security.singular': '$!data_type.getProperty("singular")',
                'xdat:element_security.plural': '$!data_type.getProperty("plural")',
                'xdat:element_security.code': '$!data_type.getProperty("code")',
                'xdat:element_security.accessible': binaryBoolean('$!data_type.getBooleanProperty("accessible")'),
                'xdat:element_security.secure': binaryBoolean('$!data_type.getBooleanProperty("secure")'),
                'xdat:element_security.searchable': binaryBoolean('$!data_type.getBooleanProperty("searchable")'),
                'xdat:element_security.browse': binaryBoolean('$!data_type.getBooleanProperty("browse")'),
                reportActions: [
                    #set ($reportActions = $!data_type.getChildItems("xdat:element_security/element_actions/element_action"))
                    #foreach($reportAction in $reportActions)
                        {
                            id: '$!reportAction.getStringProperty("xdat_element_action_type_id")',
                            actionName: '$!reportAction.getStringProperty("element_action_name")',
                            displayName: '$!reportAction.getStringProperty("display_name")',
                            grouping: '$!reportAction.getStringProperty("grouping")',
                            popup: '$!reportAction.getStringProperty("popup")',
                            secureAccess: '$!reportAction.getStringProperty("secureAccess")',
                            sequence: '$!reportAction.getStringProperty("sequence")',
                            parameterString: '$!reportAction.getStringProperty("parameterString")'
                        },
                    #end
                ],
                listingActions: [
                    #set ($listingActions = $!data_type.getChildItems("xdat:element_security/listing_actions/listing_action"))
                    #foreach($listingAction in $listingActions)
                        {
                            id: '$!listingAction.getStringProperty("xdat_element_security_listing_action_id")',
                            actionName: '$!listingAction.getStringProperty("element_action_name")',
                            displayName: '$!listingAction.getStringProperty("display_name")',
                            grouping: '$!listingAction.getStringProperty("grouping")',
                            popup: '$!listingAction.getStringProperty("popup")',
                            secureAccess: '$!listingAction.getStringProperty("secureAccess")',
                            sequence: '$!listingAction.getStringProperty("sequence")',
                            parameterString: '$!listingAction.getStringProperty("parameterString")'
                        },
                    #end
                ],
                'xdat:element_security.secure_read': binaryBoolean('$!data_type.getBooleanProperty("secure_read")'),
                'xdat:element_security.secure_create': binaryBoolean('$!data_type.getBooleanProperty("secure_create")'),
                'xdat:element_security.secure_edit': binaryBoolean('$!data_type.getBooleanProperty("secure_edit")'),
                'xdat:element_security.secure_delete': binaryBoolean('$!data_type.getBooleanProperty("secure_delete")'),
                'xdat:element_security.secondary_password': binaryBoolean('$!data_type.getBooleanProperty("secondary_password")'),
                'xdat:element_security.secure_ip': binaryBoolean('$!data_type.getBooleanProperty("secure_ip")'),
                'xdat:element_security.quarantine': binaryBoolean('$!data_type.getBooleanProperty("quarantine")'),
                'xdat:element_security.usage': '$!data_type.getProperty("usage")',
                securityFields: [
                    #set ($securityFields = $!data_type.getChildItems("xdat:element_security/primary_security_fields/primary_security_field"))
                    #foreach($securityField in $securityFields)
                        {
                            field: '$!securityField.getStringProperty("primary_security_field")',
                            id: '$!securityField.getStringProperty("xdat_primary_security_field_id")',
                        },
                    #end
                ],
                'legacyEditLink': '$link.setAction("DisplayItemAction").addPathInfo("search_element","xdat:element_security").addPathInfo("search_field","xdat:element_security.element_name").addPathInfo("search_value","$!data_type.getProperty('element_name')").addPathInfo("popup","true")'
            }
        #end

        XNAT.admin.displayDataTypes(projectTerm);

        $(document).on('click','a.data-type-link',function(e){
            e.preventDefault();
            var xsiType = $(this).parents('tr').data('xsitype');
            XNAT.admin.datatype.edit(xsiType);
        });
    }));
</script>

<!-- render inline action menus in table -->
<script src="$content.getURI("scripts/xnat/app/inlineActions.js")"></script>
<script>
    jq(document).ready(function(){
        jq('.inline-actions-menu-container').each(function(){
            var menuContainer = $(this),
                    xsiType = $(this).parents('tr').data('xsitype'),
                    legacyUrl = $(this).parents('tr').data('legacylink'),
                    reservedXsitypes = [
                        'xnat:projectData',
                        'xnat:subjectData',
                        'wrk:workflowData'
                    ];
            var opts = {
                label: 'Actions for '+xsiType
            };
            var actions = [
                {
                    label: 'Edit Data Type Attributes',
                    onclick: function(){ XNAT.admin.datatype.edit(xsiType) }
                },
                {
                    label: 'Edit Data Type Actions',
                    onclick: function(){ XNAT.admin.datatype.editActions(xsiType) }
                },
                {
                    label: 'Legacy Data Type Editor',
                    onclick: function(){ window.open( legacyUrl )}
                }
            ];
            if (reservedXsitypes.indexOf(xsiType) < 0) {
                actions.push({
                    label: 'Delete Data Type',
                    onclick: function(){ XNAT.admin.datatype.delete(xsiType) }
                });
            }
            XNAT.app.inlineActions.init(menuContainer,actions,opts);
        });
    })
</script>