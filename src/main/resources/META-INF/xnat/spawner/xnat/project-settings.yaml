# project settings tabs

root:
    kind: tabs
    groups:
        projectAdmin: Project Administration
    contents:
        ${dataHandling}
        ${notificationsEvents}
        ${users}

# define tabs
dataHandling:
    kind: tab
    label: Data Handling
    group: projectAdmin
    contents:
        ${quarantineSettings}
        ${prearchiveSettings}
        ${dicomConfig}
        ${scanTypeMapping}

notificationsEvents:
    kind: tab
    label: "Notifications & Events"
    group: projectAdmin
    contents:
        ${notificationsConfig}



# ==================================================
# 'Data Handling' tab
# ==================================================
quarantineSettings:
    kind: panel.form
    id: quarantine-settings
    label: Define Quarantine Settings
    load: /data/projects/{{XNAT.data.context.project}}/quarantine_code > [[quarantine]]
    action: /data/projects/{{XNAT.data.context.project}}/quarantine_code/[[quarantine]]?XNAT_CSRF={{csrfToken}}
    method: PUT
    contents:
        yesQuarantine:
            kind: input.radio
            name: quarantine
            id: yes-quarantine
            value: "1"
            layout: block
            label: '<b style="width:30px;display:inline-block;">Yes</b>'
            description: >
                All new experiments (and modified experiments) are quarantined and must be specifically activated.
        noQuarantine:
            kind: input.radio
            name: quarantine
            id: no-quarantine
            value: "0"
            layout: block
            label: '<b style="width:30px;display:inline-block;">No</b>'
            description: >
                New and modified experiments will not be quarantined.

prearchiveSettings:
    kind: panel.form
    id: prearchive-settings
    label: Define Prearchive Settings
    load: /data/projects/{{XNAT.data.context.project}}/prearchive_code > [[prearchive]]
    action: /data/projects/{{XNAT.data.context.project}}/prearchive_code/[[prearchive]]?XNAT_CSRF={{csrfToken}}
    method: PUT
    contents:
        prearc0:
            kind: input.radio
            name: prearchive
            id: prearchive-0
            value: "0"
            layout: block
            description: >
                All image data should be placed in a temporary location (prearchive) before being
                manually transferred into the permanent archive.
        prearc4:
            kind: input.radio
            name: prearchive
            id: prearchive-4
            value: "4"
            layout: block
            description: >
                All image data will be placed into the archive automatically, but anything matching
                existing files will be rejected. Data which doesn't match a pre-existing project will
                be placed in an 'Unassigned' project.
        prearc5:
            kind: input.radio
            name: prearchive
            id: prearchive-5
            value: "5"
            layout: block
            description: >
                All image data will be placed into the archive automatically and will overwrite existing files.
                Data which doesn't match a pre-existing project will be placed in an 'Unassigned' project.
#        bogus: '<span class="bogus"></span>'
#        foo:
#            - ['p.foo', 'Foo content']
#            - '<p class="bar">Bar Content</p>'

dicomConfig:
    kind: panel.form
    label: DICOM Configuration
    load: /data/projects/{{XNAT.data.context.project}}/config/separatePETMR/config?contents=true > [[separatePETMR]]
    action: /data/projects/{{XNAT.data.context.project}}/config/separatePETMR/config < [[separatePETMR|text/plain]]
    method: PUT
    params:
        - inbody=true
        - XNAT_CSRF={{csrfToken}}
    contents:
        separatePETMR:
            kind: panel.select.single
            name: separatePETMR
            label: "Separate PET-MR?"
            description: >
                Should data generated by PET-MR scanners be created as a single PET/MR imaging session,
                created as a single PET imaging session, or separated into PET and MR sessions?
            options:
                "default": "Use the system default"
                petmr: "Create as PET/MR session"
                pet: "Create as PET session"
                separate: "Separate into PET and MR sessions"


scanTypeMapping:
    kind: panel.form
    id: scan-type-mapping
    label: Define Scan Type Mapping
    load: /data/projects/{{XNAT.data.context.project}}/scan_type_mapping > [[scan_type_mapping]]
    action: /data/projects/{{XNAT.data.context.project}}/scan_type_mapping/[[scan_type_mapping]]?XNAT_CSRF={{csrfToken}}
    method: PUT
    contents:
        yesScanTypeMapping:
            kind: input.radio
            name: scan_type_mapping
            id: yes-scan-type-mapping
            value: "true"
            layout: block
            label: '<b style="width:30px;display:inline-block;">Yes</b>'
            description: >
                Incoming scans will have their type attribute set based on historical scan type mapping data.
        noScanTypeMapping:
            kind: input.radio
            name: scan_type_mapping
            id: no-scan-type-mapping
            value: "false"
            layout: block
            label: '<b style="width:30px;display:inline-block;">No</b>'
            description: >
                Incoming scans will have their type attribute set to be identical to their series description.

# ==================================================



# ==================================================
# 'Notifications & Events' tab
# ==================================================
notificationsConfig:
    kind: panel.form
    id: notifications-config
    label: Notifications Configuration
    load: /data/projects/{{XNAT.data.context.project}}/resources/notifications/files/archival.lst > [[notif_list]]
    action: /data/projects/{{XNAT.data.context.project}}/resources/notifications/files/archival.lst < [[notif_list|text/plain]]
    method: PUT
    params:
        inbody: true
        overwrite: true
        content: NOTIFY_ARCHIVAL
        XNAT_CSRF: "{{csrfToken}}"
    contents:
        notif_list:
            kind: panel.textarea
            name: notif_list
            label: Email Addresses
            validation: emails allow-empty
            description: >
                Emails should be comma separated (i.e. tim@somewhere.com,jenny@somewhere.com).

# ==================================================



# DEMO TAB
users:
    kind: tab
    label: User List
    group: projectAdmin
    contents:
        ${userTable}

userTable:
    kind: table.dataTable
    url: /data/projects/{{XNAT.data.context.project}}/users
    columns:
        NAME:
            label: Name
            filter: true
            sort: true
            apply: >
                !? function(){
                    return this.firstname + ' ' + this.lastname
                }
        login:
            label: Username
            filter: true
            sort: true
        email:
            label: Email
            filter: true
            sort: true
            html: >
                <a href="mailto:__VALUE__">__VALUE__</a>
        displayname:
            label: Group
            filter: true
            sort: true
